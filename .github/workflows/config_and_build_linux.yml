name: Build Python to EXE

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'BuildScripts/**'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'BuildScripts/**'

  workflow_dispatch:

permissions:
  contents: write
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller
      
      - name: Build EXE
        run: |
          # Cambia directory per risolvere i problemi di percorsi relativi
          cd BuildScripts
          # Rimuovi --noconsole e aggiungi --add-data per includere script_utils
          pyinstaller --onefile --add-data "script_utils.py;." --add-data "build.json;." build.py
      
      - name: Move EXE to root and cleanup
        run: |
            rm -f build.sh
            rm -f build.exe
            "build.sh" mv build.sh "BuildScripts/dist/build.sh"
            rm -r "BuildScripts/dist"
            rm -r "BuildScripts/build"
            rm -f "BuildScripts/build.spec"
      
      - name: Commit and push executable
        run: |
          git config --local user.email "raul.pianon@studenti.unipd.it"
          git config --local user.name "RaulPianon"
          # Configura un utente fittizio per il commit o da un utente specifico
          # git config --local user.email "action@github.com"
          # git config --local user.name "GitHub Action"
          git add build.exe
          git commit -m "Auto-build: Updated build.exe" || exit 0
          git push
      
      - name: Upload artifact (backup)
        uses: actions/upload-artifact@v4
        with:
          name: config-generator
          path: build.sh